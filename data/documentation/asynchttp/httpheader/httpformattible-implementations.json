{"abstract":[{"type":"text","text":"No overview available."}],"sections":[],"metadata":{"title":"HTTPFormattible Implementations","modules":[{"name":"AsyncHTTP"}],"role":"collectionGroup"},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/httpheader\/httpformattible-implementations"]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPHeader"]]},"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPHeader\/httpFormatted()"]}],"identifier":{"url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPHeader\/HTTPFormattible-Implementations","interfaceLanguage":"swift"},"references":{"doc://AsyncHTTP/documentation/AsyncHTTP":{"role":"collection","url":"\/documentation\/asynchttp","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","title":"AsyncHTTP","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"type":"topic","kind":"symbol"},"doc://AsyncHTTP/documentation/AsyncHTTP/HTTPHeader":{"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPHeader","type":"topic","role":"symbol","url":"\/documentation\/asynchttp\/httpheader","navigatorTitle":[{"kind":"identifier","text":"HTTPHeader"}],"title":"HTTPHeader","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeader","kind":"identifier"}]},"doc://AsyncHTTP/documentation/AsyncHTTP/HTTPHeader/httpFormatted()":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPHeader\/httpFormatted()","title":"httpFormatted()","type":"topic","url":"\/documentation\/asynchttp\/httpheader\/httpformatted()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"httpFormatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HTTPFormattible"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"role":"symbol"}}}