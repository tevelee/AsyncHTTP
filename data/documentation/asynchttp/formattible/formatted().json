{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"extendedModule":"AsyncHTTP","symbolKind":"method","modules":[{"name":"AsyncHTTP"}],"role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"DefaultFormattible","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method","title":"formatted()","externalID":"s:9AsyncHTTP11FormattiblePA2A07DefaultC0RzrlE9formattedSSyF"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"platforms":["Linux"],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formattible\/formatted()"},"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formattible"]]},"sections":[],"abstract":[{"text":"No overview available.","type":"text"}],"variants":[{"paths":["\/documentation\/asynchttp\/formattible\/formatted()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":2},"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/Formattible/formatted()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formattible\/formatted()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"url":"\/documentation\/asynchttp\/formattible\/formatted()","abstract":[],"title":"formatted()","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"DefaultFormattible","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://AsyncHTTP/documentation/AsyncHTTP/Formattible":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formattible","role":"symbol","url":"\/documentation\/asynchttp\/formattible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Formattible"}],"type":"topic","kind":"symbol","title":"Formattible","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Formattible"}]},"doc://AsyncHTTP/documentation/AsyncHTTP":{"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","url":"\/documentation\/asynchttp","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"type":"topic","title":"AsyncHTTP","role":"collection"}}}