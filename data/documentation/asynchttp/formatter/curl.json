{"abstract":[{"text":"No overview available.","type":"text"}],"variants":[{"paths":["\/documentation\/asynchttp\/formatter\/curl"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","metadata":{"title":"curl","symbolKind":"property","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"code":"CURLHTTPRequestFormatter","type":"codeVoice"},{"text":".","type":"text"}]},"modules":[{"name":"AsyncHTTP"}],"role":"symbol","externalID":"s:9AsyncHTTP9FormatterPA2A015CURLHTTPRequestC0CRszrlE4curlAEvpZ","extendedModule":"AsyncHTTP","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"curl","kind":"identifier"},{"text":": ","kind":"text"},{"text":"CURLHTTPRequestFormatter","kind":"typeIdentifier","preciseIdentifier":"s:9AsyncHTTP24CURLHTTPRequestFormatterC"}],"roleHeading":"Type Property"},"schemaVersion":{"patch":0,"minor":2,"major":0},"identifier":{"url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter\/curl","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"curl","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9AsyncHTTP24CURLHTTPRequestFormatterC","text":"CURLHTTPRequestFormatter","kind":"typeIdentifier","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/CURLHTTPRequestFormatter"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter"]]},"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/Formatter/curl":{"url":"\/documentation\/asynchttp\/formatter\/curl","title":"curl","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"curl","kind":"identifier"},{"text":": ","kind":"text"},{"text":"CURLHTTPRequestFormatter","kind":"typeIdentifier","preciseIdentifier":"s:9AsyncHTTP24CURLHTTPRequestFormatterC"}],"type":"topic","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"CURLHTTPRequestFormatter"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter\/curl"},"doc://AsyncHTTP/documentation/AsyncHTTP":{"url":"\/documentation\/asynchttp","type":"topic","title":"AsyncHTTP","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","role":"collection"},"doc://AsyncHTTP/documentation/AsyncHTTP/CURLHTTPRequestFormatter":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/CURLHTTPRequestFormatter","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CURLHTTPRequestFormatter"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"CURLHTTPRequestFormatter","kind":"identifier"}],"abstract":[],"url":"\/documentation\/asynchttp\/curlhttprequestformatter","title":"CURLHTTPRequestFormatter"},"doc://AsyncHTTP/documentation/AsyncHTTP/Formatter":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Formatter","kind":"identifier"}],"navigatorTitle":[{"text":"Formatter","kind":"identifier"}],"url":"\/documentation\/asynchttp\/formatter","type":"topic","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter","abstract":[],"kind":"symbol","title":"Formatter"}}}