{"schemaVersion":{"major":0,"patch":0,"minor":2},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"curl"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9AsyncHTTP24CURLHTTPRequestFormatterC","kind":"typeIdentifier","text":"CURLHTTPRequestFormatter","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/CURLHTTPRequestFormatter"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"No overview available."}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"curl"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CURLHTTPRequestFormatter","preciseIdentifier":"s:9AsyncHTTP24CURLHTTPRequestFormatterC"}],"roleHeading":"Type Property","modules":[{"name":"AsyncHTTP"}],"role":"symbol","extendedModule":"AsyncHTTP","externalID":"s:9AsyncHTTP9FormatterPA2A015CURLHTTPRequestC0CRszrlE4curlAEvpZ","title":"curl","symbolKind":"property","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"CURLHTTPRequestFormatter","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter\/curl"},"sections":[],"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter"]]},"variants":[{"paths":["\/documentation\/asynchttp\/formatter\/curl"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/Formatter/curl":{"url":"\/documentation\/asynchttp\/formatter\/curl","title":"curl","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter\/curl","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"CURLHTTPRequestFormatter","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"curl","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9AsyncHTTP24CURLHTTPRequestFormatterC","text":"CURLHTTPRequestFormatter","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://AsyncHTTP/documentation/AsyncHTTP":{"type":"topic","title":"AsyncHTTP","url":"\/documentation\/asynchttp","abstract":[{"type":"text","text":"Generic Swift networking library with async\/await"}],"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","role":"collection","kind":"symbol"},"doc://AsyncHTTP/documentation/AsyncHTTP/Formatter":{"kind":"symbol","type":"topic","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Formatter","navigatorTitle":[{"kind":"identifier","text":"Formatter"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Formatter"}],"role":"symbol","url":"\/documentation\/asynchttp\/formatter","abstract":[],"title":"Formatter"},"doc://AsyncHTTP/documentation/AsyncHTTP/CURLHTTPRequestFormatter":{"role":"symbol","url":"\/documentation\/asynchttp\/curlhttprequestformatter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CURLHTTPRequestFormatter"}],"type":"topic","title":"CURLHTTPRequestFormatter","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"CURLHTTPRequestFormatter","kind":"identifier"}],"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/CURLHTTPRequestFormatter"}}}