{"variants":[{"paths":["\/documentation\/asynchttp\/urischeme\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":2,"major":0},"metadata":{"extendedModule":"Swift","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:9AsyncHTTP9URISchemeV","roleHeading":"Initializer","modules":[{"name":"AsyncHTTP"}],"role":"symbol","title":"init(from:)","symbolKind":"init"},"identifier":{"url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/URIScheme\/init(from:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/URIScheme","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/URIScheme\/RawRepresentable-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RawRepresentable.init(from:)"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}]}],"sections":[],"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/URIScheme":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/URIScheme","url":"\/documentation\/asynchttp\/urischeme","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URIScheme","kind":"identifier"}],"title":"URIScheme","role":"symbol","navigatorTitle":[{"text":"URIScheme","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol"},"doc://AsyncHTTP/documentation/AsyncHTTP/URIScheme/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","url":"\/documentation\/asynchttp\/urischeme\/rawrepresentable-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/URIScheme\/RawRepresentable-Implementations","abstract":[],"kind":"article"},"doc://AsyncHTTP/documentation/AsyncHTTP":{"url":"\/documentation\/asynchttp","type":"topic","title":"AsyncHTTP","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","role":"collection"},"doc://AsyncHTTP/documentation/AsyncHTTP/URIScheme/init(from:)":{"title":"init(from:)","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/URIScheme\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/asynchttp\/urischeme\/init(from:)","abstract":[],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}