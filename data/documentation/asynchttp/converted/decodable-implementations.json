{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":2},"metadata":{"title":"Decodable Implementations","role":"collectionGroup","modules":[{"name":"AsyncHTTP"}]},"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted"]]},"abstract":[{"text":"No overview available.","type":"text"}],"kind":"article","identifier":{"url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/Decodable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/init(from:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/converted\/decodable-implementations"]}],"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/Converted":{"url":"\/documentation\/asynchttp\/converted","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Converted"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Converted"}],"title":"Converted","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted","type":"topic","role":"symbol","kind":"symbol"},"doc://AsyncHTTP/documentation/AsyncHTTP":{"url":"\/documentation\/asynchttp","abstract":[{"type":"text","text":"Generic Swift networking library with async\/await"}],"title":"AsyncHTTP","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","type":"topic","role":"collection","kind":"symbol"},"doc://AsyncHTTP/documentation/AsyncHTTP/Converted/init(from:)":{"url":"\/documentation\/asynchttp\/converted\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/init(from:)","abstract":[],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Converter"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Converter.RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","title":"init(from:)"}}}