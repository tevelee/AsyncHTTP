{"abstract":[{"text":"No overview available.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted"]]},"kind":"article","sections":[],"identifier":{"url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/Encodable-Implementations","interfaceLanguage":"swift"},"metadata":{"role":"collectionGroup","modules":[{"name":"AsyncHTTP"}],"title":"Encodable Implementations"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/encode(to:)"],"title":"Instance Methods"}],"schemaVersion":{"major":0,"patch":0,"minor":2},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/converted\/encodable-implementations"]}],"references":{"doc://AsyncHTTP/documentation/AsyncHTTP":{"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","url":"\/documentation\/asynchttp","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"type":"topic","title":"AsyncHTTP","role":"collection"},"doc://AsyncHTTP/documentation/AsyncHTTP/Converted":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Converted"}],"type":"topic","url":"\/documentation\/asynchttp\/converted","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Converted"}],"title":"Converted"},"doc://AsyncHTTP/documentation/AsyncHTTP/Converted/encode(to:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"constraints":[{"code":"Converter","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"EncoderStrategy","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Converter.RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","url":"\/documentation\/asynchttp\/converted\/encode(to:)","abstract":[],"kind":"symbol","title":"encode(to:)","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/encode(to:)"}}}