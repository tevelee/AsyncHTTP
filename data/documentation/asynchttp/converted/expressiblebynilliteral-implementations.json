{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/ExpressibleByNilLiteral-Implementations"},"abstract":[{"text":"No overview available.","type":"text"}],"schemaVersion":{"minor":2,"major":0,"patch":0},"metadata":{"role":"collectionGroup","title":"ExpressibleByNilLiteral Implementations","modules":[{"name":"AsyncHTTP"}]},"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted"]]},"kind":"article","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/converted\/expressiblebynilliteral-implementations"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/init(nilLiteral:)"],"generated":true}],"references":{"doc://AsyncHTTP/documentation/AsyncHTTP":{"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","url":"\/documentation\/asynchttp","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"type":"topic","title":"AsyncHTTP","role":"collection"},"doc://AsyncHTTP/documentation/AsyncHTTP/Converted":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Converted"}],"type":"topic","url":"\/documentation\/asynchttp\/converted","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Converted"}],"title":"Converted"},"doc://AsyncHTTP/documentation/AsyncHTTP/Converted/init(nilLiteral:)":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Converted\/init(nilLiteral:)","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nilLiteral"},{"kind":"text","text":": ())"}],"type":"topic","url":"\/documentation\/asynchttp\/converted\/init(nilliteral:)","kind":"symbol","title":"init(nilLiteral:)","conformance":{"constraints":[{"code":"Converter","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ConversionStrategy","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Converter.ConvertedValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ExpressibleByNilLiteral","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}