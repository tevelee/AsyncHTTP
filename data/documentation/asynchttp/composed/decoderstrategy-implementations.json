{"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/composed\/decoderstrategy-implementations"]}],"sections":[],"abstract":[{"text":"No overview available.","type":"text"}],"metadata":{"role":"collectionGroup","title":"DecoderStrategy Implementations","modules":[{"name":"AsyncHTTP"}]},"schemaVersion":{"minor":2,"patch":0,"major":0},"topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/decode(_:)"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/DecoderStrategy-Implementations"},"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed"]]},"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/Composed":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Composed","kind":"identifier"}],"title":"Composed","abstract":[],"url":"\/documentation\/asynchttp\/composed","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed","kind":"symbol","navigatorTitle":[{"text":"Composed","kind":"identifier"}],"type":"topic"},"doc://AsyncHTTP/documentation/AsyncHTTP":{"url":"\/documentation\/asynchttp","type":"topic","title":"AsyncHTTP","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","role":"collection"},"doc://AsyncHTTP/documentation/AsyncHTTP/Composed/decode(_:)":{"role":"symbol","type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"A"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":", "},{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":", and "},{"type":"codeVoice","code":"A.ConvertedValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"B.RawValue"},{"type":"text","text":"."}]},"title":"decode(_:)","url":"\/documentation\/asynchttp\/composed\/decode(_:)","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/decode(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RawValue"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"B","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ConvertedValue","kind":"typeIdentifier"}],"abstract":[]}}}