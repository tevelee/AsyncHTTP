{"metadata":{"extendedModule":"AsyncHTTP","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RawValue"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ConvertedValue"}],"modules":[{"name":"AsyncHTTP"}],"symbolKind":"method","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"A"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":", "},{"type":"codeVoice","code":"B"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"DecoderStrategy"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"A.ConvertedValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"B.RawValue"},{"text":".","type":"text"}]},"title":"decode(_:)","externalID":"s:9AsyncHTTP8ComposedVA2A15DecoderStrategyRzAaDR_8RawValueQy_09ConvertedG0RtzrlE6decodeyAGQy_AEQzKFZ"},"sections":[],"schemaVersion":{"major":0,"minor":2,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/decode(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"RawValue","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ConvertedValue","kind":"typeIdentifier"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/DecoderStrategy-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"DecoderStrategy.decode(_:)"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/composed\/decode(_:)"]}],"references":{"doc://AsyncHTTP/documentation/AsyncHTTP":{"url":"\/documentation\/asynchttp","type":"topic","title":"AsyncHTTP","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","role":"collection"},"doc://AsyncHTTP/documentation/AsyncHTTP/Composed/decode(_:)":{"role":"symbol","type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"A"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":", "},{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":", and "},{"type":"codeVoice","code":"A.ConvertedValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"B.RawValue"},{"type":"text","text":"."}]},"title":"decode(_:)","url":"\/documentation\/asynchttp\/composed\/decode(_:)","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/decode(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RawValue"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"B","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ConvertedValue","kind":"typeIdentifier"}],"abstract":[]},"doc://AsyncHTTP/documentation/AsyncHTTP/Composed/DecoderStrategy-Implementations":{"type":"topic","url":"\/documentation\/asynchttp\/composed\/decoderstrategy-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/DecoderStrategy-Implementations","title":"DecoderStrategy Implementations","abstract":[]},"doc://AsyncHTTP/documentation/AsyncHTTP/Composed":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Composed","kind":"identifier"}],"title":"Composed","abstract":[],"url":"\/documentation\/asynchttp\/composed","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed","kind":"symbol","navigatorTitle":[{"text":"Composed","kind":"identifier"}],"type":"topic"}}}