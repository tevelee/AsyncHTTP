{"kind":"symbol","identifier":{"url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/decode(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RawValue"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ConvertedValue"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/DecoderStrategy-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"DecoderStrategy.decode(_:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"variants":[{"paths":["\/documentation\/asynchttp\/composed\/decode(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":2,"major":0,"patch":0},"metadata":{"extendedModule":"AsyncHTTP","conformance":{"constraints":[{"code":"A","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"DecoderStrategy","type":"codeVoice"},{"type":"text","text":", "},{"code":"B","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"DecoderStrategy","type":"codeVoice"},{"type":"text","text":", and "},{"code":"A.ConvertedValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"B.RawValue","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"RawValue","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ConvertedValue"}],"modules":[{"name":"AsyncHTTP"}],"symbolKind":"method","roleHeading":"Type Method","role":"symbol","externalID":"s:9AsyncHTTP8ComposedVA2A15DecoderStrategyRzAaDR_8RawValueQy_09ConvertedG0RtzrlE6decodeyAGQy_AEQzKFZ","title":"decode(_:)"},"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/Composed/decode(_:)":{"kind":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/decode(_:)","abstract":[],"type":"topic","title":"decode(_:)","url":"\/documentation\/asynchttp\/composed\/decode(_:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"A"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":", "},{"type":"codeVoice","code":"B"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DecoderStrategy"},{"type":"text","text":", and "},{"type":"codeVoice","code":"A.ConvertedValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"B.RawValue"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"RawValue","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ConvertedValue","kind":"typeIdentifier"}]},"doc://AsyncHTTP/documentation/AsyncHTTP/Composed":{"abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Composed","kind":"identifier"}],"role":"symbol","url":"\/documentation\/asynchttp\/composed","navigatorTitle":[{"text":"Composed","kind":"identifier"}],"title":"Composed","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed","type":"topic"},"doc://AsyncHTTP/documentation/AsyncHTTP/Composed/DecoderStrategy-Implementations":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/Composed\/DecoderStrategy-Implementations","url":"\/documentation\/asynchttp\/composed\/decoderstrategy-implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","title":"DecoderStrategy Implementations"},"doc://AsyncHTTP/documentation/AsyncHTTP":{"type":"topic","title":"AsyncHTTP","url":"\/documentation\/asynchttp","abstract":[{"type":"text","text":"Generic Swift networking library with async\/await"}],"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","role":"collection","kind":"symbol"}}}