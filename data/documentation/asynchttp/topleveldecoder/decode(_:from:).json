{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/topleveldecoder\/decode(_:from:)"]}],"abstract":[{"type":"text","text":"No overview available."}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"AsyncHTTP"}],"title":"decode(_:from:)","role":"symbol","externalID":"s:9AsyncHTTP15TopLevelDecoderP6decode_4fromqd__qd__m_5InputQztKSeRd__lF","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/TopLevelDecoder"]]},"identifier":{"url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/TopLevelDecoder\/decode(_:from:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":2},"sections":[],"kind":"symbol","references":{"doc://AsyncHTTP/documentation/AsyncHTTP":{"kind":"symbol","url":"\/documentation\/asynchttp","title":"AsyncHTTP","role":"collection","type":"topic","abstract":[{"text":"Generic Swift networking library with async\/await","type":"text"}],"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP"},"doc://AsyncHTTP/documentation/AsyncHTTP/TopLevelDecoder/decode(_:from:)":{"type":"topic","title":"decode(_:from:)","kind":"symbol","role":"symbol","abstract":[],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/asynchttp\/topleveldecoder\/decode(_:from:)","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/TopLevelDecoder\/decode(_:from:)"},"doc://AsyncHTTP/documentation/AsyncHTTP/TopLevelDecoder":{"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/TopLevelDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelDecoder"}],"url":"\/documentation\/asynchttp\/topleveldecoder","type":"topic","abstract":[],"title":"TopLevelDecoder","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}]}}}