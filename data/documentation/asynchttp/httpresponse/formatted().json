{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynchttp\/httpresponse\/formatted()"]}],"metadata":{"extendedModule":"AsyncHTTP","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"role":"symbol","externalID":"s:9AsyncHTTP11FormattiblePA2A07DefaultC0RzrlE9formattedSSyF::SYNTHESIZED::s:9AsyncHTTP12HTTPResponseV","title":"formatted()","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"DefaultFormattible","type":"codeVoice"},{"text":".","type":"text"}]},"modules":[{"name":"AsyncHTTP"}]},"hierarchy":{"paths":[["doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPResponse","doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPResponse\/Formattible-Implementations"]]},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Formattible.formatted()","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"minor":2,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPResponse\/formatted()"},"references":{"doc://AsyncHTTP/documentation/AsyncHTTP/HTTPResponse/Formattible-Implementations":{"type":"topic","url":"\/documentation\/asynchttp\/httpresponse\/formattible-implementations","abstract":[],"title":"Formattible Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPResponse\/Formattible-Implementations"},"doc://AsyncHTTP/documentation/AsyncHTTP/HTTPResponse":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponse"}],"url":"\/documentation\/asynchttp\/httpresponse","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponse"}],"identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPResponse","kind":"symbol","type":"topic","title":"HTTPResponse"},"doc://AsyncHTTP/documentation/AsyncHTTP":{"url":"\/documentation\/asynchttp","kind":"symbol","title":"AsyncHTTP","type":"topic","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP","abstract":[{"type":"text","text":"Generic Swift networking library with async\/await"}],"role":"collection"},"doc://AsyncHTTP/documentation/AsyncHTTP/HTTPResponse/formatted()":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DefaultFormattible"},{"type":"text","text":"."}]},"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"url":"\/documentation\/asynchttp\/httpresponse\/formatted()","abstract":[],"title":"formatted()","kind":"symbol","role":"symbol","identifier":"doc:\/\/AsyncHTTP\/documentation\/AsyncHTTP\/HTTPResponse\/formatted()"}}}